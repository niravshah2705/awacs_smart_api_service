name: Build and publish
on: 
  release:
    types: [created]
  push:
    branches: [main]
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: us-central1-c	  # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-awacs-deployment # TODO: update to deployment name
  IMAGE: ${{ github.event.repository.name }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    #- run: |-
    #    gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # Build the Docker image
    - name: Build
      env: 
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} 
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
        # docker tag $IMAGE:$GITHUB_SHA gcr.io/$PROJECT_ID/$IMAGE:latest
        echo "confirming latest lag points to a baked image"
        gcloud container images list-tags gcr.io/$PROJECT_ID/$IMAGE
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
         # gcloud container images delete $IMAGE -q --force-delete-tags
         # sleep 2
         docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
         echo "add tag"
         gcloud container images add-tag \
         gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA \
         gcr.io/$PROJECT_ID/$IMAGE:latest
